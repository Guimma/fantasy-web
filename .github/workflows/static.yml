# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Setup environment variables
        run: |
          # Substitui as variáveis de ambiente no arquivo de configuração
          sed -i "s/GOOGLE_CLIENT_ID/${{ secrets.GOOGLE_CLIENT_ID }}/g" src/environments/environment.prod.ts
      
      - name: Build Angular App
        run: npm run build -- --configuration production --base-href=/fantasy-web/
      
      - name: Create credentials file
        run: |
          # Cria o arquivo de credenciais
          mkdir -p dist/fantasy-web/browser/assets
          echo '{
              "type": "service_account",
              "project_id": "${{ secrets.GOOGLE_PROJECT_ID }}",
              "private_key_id": "${{ secrets.GOOGLE_PRIVATE_KEY_ID }}",
              "private_key": "${{ secrets.GOOGLE_PRIVATE_KEY }}",
              "client_email": "${{ secrets.GOOGLE_CLIENT_EMAIL }}",
              "client_id": "${{ secrets.GOOGLE_CLIENT_ID }}",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_x509_cert_url": "${{ secrets.GOOGLE_CLIENT_X509_CERT_URL }}",
              "universe_domain": "googleapis.com"
          }' > dist/fantasy-web/browser/assets/credentials.json
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire dist folder
          path: 'dist/fantasy-web/browser'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 